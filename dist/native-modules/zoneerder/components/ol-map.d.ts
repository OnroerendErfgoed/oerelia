import * as ol from 'openlayers';
import { Boundingbox } from '../models/boundingbox';
import { Contour } from '../models/contour';
export declare class OlMap {
    private element;
    disabled: boolean;
    zone: Contour;
    adrespunten: Contour[];
    polygonList: string[];
    WKTstring: string;
    protected isDrawing: boolean;
    protected selectPerceel: boolean;
    private apiService;
    private map;
    private mapProjection;
    private extentVlaanderen;
    private drawLayer;
    private baseLayers;
    private mapInteractions;
    private initialized;
    private geoJsonFormatter;
    private mapnode;
    private polygonIndex;
    constructor(element: Element);
    attached(): void;
    updateMapSize(): void;
    disabledChanged(newValue: boolean, oldValue: boolean): void;
    setBaseLayer(layerName: string): void;
    zoomToExtent(extent: ol.Extent): void;
    zoomToFeatures(): void;
    getMapInfo(): number;
    formatGeoJson(feature: ol.geom.Geometry): Contour;
    transformBoundingboxToMapExtent(boundingbox: Boundingbox): [number, number, number, number];
    transformLatLonToPoint(lat: number, lon: number): ol.geom.Point;
    startDrawZone(): void;
    importAdrespunten(): void;
    startPerceelSelect(): void;
    drawPerceel(olFeature: ol.Feature): void;
    drawWKTzone(wkt: ol.Feature): void;
    removePolygon(name: string): void;
    private addToZone;
    private resetSelect;
    private resetSelectValues;
    private toggleDrawZone;
    private _createMap;
    private _createInteractions;
    private _createLayers;
    private _defineProjections;
    private _createGrbLayer;
    private _createNgiLayer;
    private _createGrbWMSLayer;
    private _createVectorLayer;
    private strip;
}
